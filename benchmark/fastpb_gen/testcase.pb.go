// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.2
// source: testcase.proto

package testcase

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  int32   `protobuf:"varint,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2  int64   `protobuf:"varint,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3  uint32  `protobuf:"varint,3,opt,name=field3,proto3" json:"field3,omitempty"`
	Field4  uint64  `protobuf:"varint,4,opt,name=field4,proto3" json:"field4,omitempty"`
	Field5  int32   `protobuf:"zigzag32,5,opt,name=field5,proto3" json:"field5,omitempty"`
	Field6  int64   `protobuf:"zigzag64,6,opt,name=field6,proto3" json:"field6,omitempty"`
	Field7  bool    `protobuf:"varint,7,opt,name=field7,proto3" json:"field7,omitempty"`
	Field8  float32 `protobuf:"fixed32,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9  float64 `protobuf:"fixed64,9,opt,name=field9,proto3" json:"field9,omitempty"`
	Field10 uint32  `protobuf:"fixed32,10,opt,name=field10,proto3" json:"field10,omitempty"`
	Field11 uint64  `protobuf:"fixed64,11,opt,name=field11,proto3" json:"field11,omitempty"`
	Field12 int32   `protobuf:"fixed32,12,opt,name=field12,proto3" json:"field12,omitempty"`
	Field13 int64   `protobuf:"fixed64,13,opt,name=field13,proto3" json:"field13,omitempty"`
}

func (x *Number) Reset() {
	*x = Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testcase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Number) ProtoMessage() {}

func (x *Number) ProtoReflect() protoreflect.Message {
	mi := &file_testcase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Number.ProtoReflect.Descriptor instead.
func (*Number) Descriptor() ([]byte, []int) {
	return file_testcase_proto_rawDescGZIP(), []int{0}
}

func (x *Number) GetField1() int32 {
	if x != nil {
		return x.Field1
	}
	return 0
}

func (x *Number) GetField2() int64 {
	if x != nil {
		return x.Field2
	}
	return 0
}

func (x *Number) GetField3() uint32 {
	if x != nil {
		return x.Field3
	}
	return 0
}

func (x *Number) GetField4() uint64 {
	if x != nil {
		return x.Field4
	}
	return 0
}

func (x *Number) GetField5() int32 {
	if x != nil {
		return x.Field5
	}
	return 0
}

func (x *Number) GetField6() int64 {
	if x != nil {
		return x.Field6
	}
	return 0
}

func (x *Number) GetField7() bool {
	if x != nil {
		return x.Field7
	}
	return false
}

func (x *Number) GetField8() float32 {
	if x != nil {
		return x.Field8
	}
	return 0
}

func (x *Number) GetField9() float64 {
	if x != nil {
		return x.Field9
	}
	return 0
}

func (x *Number) GetField10() uint32 {
	if x != nil {
		return x.Field10
	}
	return 0
}

func (x *Number) GetField11() uint64 {
	if x != nil {
		return x.Field11
	}
	return 0
}

func (x *Number) GetField12() int32 {
	if x != nil {
		return x.Field12
	}
	return 0
}

func (x *Number) GetField13() int64 {
	if x != nil {
		return x.Field13
	}
	return 0
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 string `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 []byte `protobuf:"bytes,2,opt,name=field2,proto3" json:"field2,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testcase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_testcase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_testcase_proto_rawDescGZIP(), []int{1}
}

func (x *String) GetField1() string {
	if x != nil {
		return x.Field1
	}
	return ""
}

func (x *String) GetField2() []byte {
	if x != nil {
		return x.Field2
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  []int32   `protobuf:"varint,1,rep,packed,name=field1,proto3" json:"field1,omitempty"`
	Field2  []int64   `protobuf:"varint,2,rep,packed,name=field2,proto3" json:"field2,omitempty"`
	Field3  []uint32  `protobuf:"varint,3,rep,packed,name=field3,proto3" json:"field3,omitempty"`
	Field4  []uint64  `protobuf:"varint,4,rep,packed,name=field4,proto3" json:"field4,omitempty"`
	Field5  []int32   `protobuf:"zigzag32,5,rep,packed,name=field5,proto3" json:"field5,omitempty"`
	Field6  []int64   `protobuf:"zigzag64,6,rep,packed,name=field6,proto3" json:"field6,omitempty"`
	Field7  []bool    `protobuf:"varint,7,rep,packed,name=field7,proto3" json:"field7,omitempty"`
	Field8  []float32 `protobuf:"fixed32,8,rep,packed,name=field8,proto3" json:"field8,omitempty"`
	Field9  []float64 `protobuf:"fixed64,9,rep,packed,name=field9,proto3" json:"field9,omitempty"`
	Field10 []uint32  `protobuf:"fixed32,10,rep,packed,name=field10,proto3" json:"field10,omitempty"`
	Field11 []uint64  `protobuf:"fixed64,11,rep,packed,name=field11,proto3" json:"field11,omitempty"`
	Field12 []int32   `protobuf:"fixed32,12,rep,packed,name=field12,proto3" json:"field12,omitempty"`
	Field13 []int64   `protobuf:"fixed64,13,rep,packed,name=field13,proto3" json:"field13,omitempty"`
	Field14 []string  `protobuf:"bytes,14,rep,name=field14,proto3" json:"field14,omitempty"`
	Field15 [][]byte  `protobuf:"bytes,15,rep,name=field15,proto3" json:"field15,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testcase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_testcase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_testcase_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetField1() []int32 {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *List) GetField2() []int64 {
	if x != nil {
		return x.Field2
	}
	return nil
}

func (x *List) GetField3() []uint32 {
	if x != nil {
		return x.Field3
	}
	return nil
}

func (x *List) GetField4() []uint64 {
	if x != nil {
		return x.Field4
	}
	return nil
}

func (x *List) GetField5() []int32 {
	if x != nil {
		return x.Field5
	}
	return nil
}

func (x *List) GetField6() []int64 {
	if x != nil {
		return x.Field6
	}
	return nil
}

func (x *List) GetField7() []bool {
	if x != nil {
		return x.Field7
	}
	return nil
}

func (x *List) GetField8() []float32 {
	if x != nil {
		return x.Field8
	}
	return nil
}

func (x *List) GetField9() []float64 {
	if x != nil {
		return x.Field9
	}
	return nil
}

func (x *List) GetField10() []uint32 {
	if x != nil {
		return x.Field10
	}
	return nil
}

func (x *List) GetField11() []uint64 {
	if x != nil {
		return x.Field11
	}
	return nil
}

func (x *List) GetField12() []int32 {
	if x != nil {
		return x.Field12
	}
	return nil
}

func (x *List) GetField13() []int64 {
	if x != nil {
		return x.Field13
	}
	return nil
}

func (x *List) GetField14() []string {
	if x != nil {
		return x.Field14
	}
	return nil
}

func (x *List) GetField15() [][]byte {
	if x != nil {
		return x.Field15
	}
	return nil
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 map[int32]int64   `protobuf:"bytes,1,rep,name=field1,proto3" json:"field1,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Field2 map[uint32]uint64 `protobuf:"bytes,2,rep,name=field2,proto3" json:"field2,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Field3 map[int32]int64   `protobuf:"bytes,3,rep,name=field3,proto3" json:"field3,omitempty" protobuf_key:"zigzag32,1,opt,name=key,proto3" protobuf_val:"zigzag64,2,opt,name=value,proto3"`
	Field4 map[uint32]uint64 `protobuf:"bytes,4,rep,name=field4,proto3" json:"field4,omitempty" protobuf_key:"fixed32,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Field5 map[int32]int64   `protobuf:"bytes,5,rep,name=field5,proto3" json:"field5,omitempty" protobuf_key:"fixed32,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Field6 map[string][]byte `protobuf:"bytes,6,rep,name=field6,proto3" json:"field6,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testcase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_testcase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_testcase_proto_rawDescGZIP(), []int{3}
}

func (x *Map) GetField1() map[int32]int64 {
	if x != nil {
		return x.Field1
	}
	return nil
}

func (x *Map) GetField2() map[uint32]uint64 {
	if x != nil {
		return x.Field2
	}
	return nil
}

func (x *Map) GetField3() map[int32]int64 {
	if x != nil {
		return x.Field3
	}
	return nil
}

func (x *Map) GetField4() map[uint32]uint64 {
	if x != nil {
		return x.Field4
	}
	return nil
}

func (x *Map) GetField5() map[int32]int64 {
	if x != nil {
		return x.Field5
	}
	return nil
}

func (x *Map) GetField6() map[string][]byte {
	if x != nil {
		return x.Field6
	}
	return nil
}

var File_testcase_proto protoreflect.FileDescriptor

var file_testcase_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xc8, 0x02, 0x0a, 0x06,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x32, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0f, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x10, 0x52, 0x07, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x22, 0x38, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x22, 0xfa, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x33, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x35, 0x18, 0x05, 0x20, 0x03, 0x28, 0x11, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x35, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x12, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x37, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x37, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x39, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x39, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x31, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x32,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x32, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x10,
	0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x34, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x35, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x35, 0x22, 0x9f, 0x05,
	0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x32, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x33, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x33, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x4d, 0x61,
	0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72,
	0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x6e, 0x63,
	0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x36,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x1a, 0x39, 0x0a,
	0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39,
	0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x35, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testcase_proto_rawDescOnce sync.Once
	file_testcase_proto_rawDescData = file_testcase_proto_rawDesc
)

func file_testcase_proto_rawDescGZIP() []byte {
	file_testcase_proto_rawDescOnce.Do(func() {
		file_testcase_proto_rawDescData = protoimpl.X.CompressGZIP(file_testcase_proto_rawDescData)
	})
	return file_testcase_proto_rawDescData
}

var file_testcase_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_testcase_proto_goTypes = []interface{}{
	(*Number)(nil), // 0: benchmark.Number
	(*String)(nil), // 1: benchmark.String
	(*List)(nil),   // 2: benchmark.List
	(*Map)(nil),    // 3: benchmark.Map
	nil,            // 4: benchmark.Map.Field1Entry
	nil,            // 5: benchmark.Map.Field2Entry
	nil,            // 6: benchmark.Map.Field3Entry
	nil,            // 7: benchmark.Map.Field4Entry
	nil,            // 8: benchmark.Map.Field5Entry
	nil,            // 9: benchmark.Map.Field6Entry
}
var file_testcase_proto_depIdxs = []int32{
	4, // 0: benchmark.Map.field1:type_name -> benchmark.Map.Field1Entry
	5, // 1: benchmark.Map.field2:type_name -> benchmark.Map.Field2Entry
	6, // 2: benchmark.Map.field3:type_name -> benchmark.Map.Field3Entry
	7, // 3: benchmark.Map.field4:type_name -> benchmark.Map.Field4Entry
	8, // 4: benchmark.Map.field5:type_name -> benchmark.Map.Field5Entry
	9, // 5: benchmark.Map.field6:type_name -> benchmark.Map.Field6Entry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_testcase_proto_init() }
func file_testcase_proto_init() {
	if File_testcase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testcase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testcase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testcase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testcase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testcase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testcase_proto_goTypes,
		DependencyIndexes: file_testcase_proto_depIdxs,
		MessageInfos:      file_testcase_proto_msgTypes,
	}.Build()
	File_testcase_proto = out.File
	file_testcase_proto_rawDesc = nil
	file_testcase_proto_goTypes = nil
	file_testcase_proto_depIdxs = nil
}
